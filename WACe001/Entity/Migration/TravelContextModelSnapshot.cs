// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using System;

namespace WACe001.Entity.Migration
{
    [DbContext(typeof(TravelContext))]
    partial class TravelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WACe001.Entity.Coordinate", b =>
                {
                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.HasKey("Latitude", "Longitude");

                    b.ToTable("Coordinate");
                });

            modelBuilder.Entity("WACe001.Entity.Stop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Arrival");

                    b.Property<double?>("CoordinateLatitude");

                    b.Property<double?>("CoordinateLongitude");

                    b.Property<string>("Name");

                    b.Property<int>("Order");

                    b.Property<int?>("TripId");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.HasIndex("CoordinateLatitude", "CoordinateLongitude");

                    b.ToTable("Stops");
                });

            modelBuilder.Entity("WACe001.Entity.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTimestamp");

                    b.Property<string>("Name");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("WACe001.Entity.Stop", b =>
                {
                    b.HasOne("WACe001.Entity.Trip")
                        .WithMany("Stops")
                        .HasForeignKey("TripId");

                    b.HasOne("WACe001.Entity.Coordinate", "Coordinate")
                        .WithMany()
                        .HasForeignKey("CoordinateLatitude", "CoordinateLongitude");
                });
#pragma warning restore 612, 618
        }
    }
}
